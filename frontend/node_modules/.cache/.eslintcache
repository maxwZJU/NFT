[{"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\index.js":"1","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\reportWebVitals.js":"2","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\App.jsx":"3","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\list.js":"4","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Login.jsx":"5","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\ForgetPSW.jsx":"6","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Create.jsx":"7","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Bidding.jsx":"8","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\List.jsx":"9","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Own.jsx":"10","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\LoginInterface.jsx":"11","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Help.jsx":"12","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\web3.js":"13","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\eth.js":"14","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\ui.jsx":"15"},{"size":550,"mtime":1635649799146,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1634871071000,"results":"18","hashOfConfig":"17"},{"size":234,"mtime":1634871071000,"results":"19","hashOfConfig":"17"},{"size":1953,"mtime":1634871071000,"results":"20","hashOfConfig":"17"},{"size":1364,"mtime":1634871071000,"results":"21","hashOfConfig":"17"},{"size":5712,"mtime":1634871071000,"results":"22","hashOfConfig":"17"},{"size":6095,"mtime":1635576735368,"results":"23","hashOfConfig":"17"},{"size":17414,"mtime":1635575514518,"results":"24","hashOfConfig":"17"},{"size":16202,"mtime":1635576066135,"results":"25","hashOfConfig":"17"},{"size":20098,"mtime":1635576484093,"results":"26","hashOfConfig":"17"},{"size":5660,"mtime":1635650230661,"results":"27","hashOfConfig":"17"},{"size":6702,"mtime":1635650253431,"results":"28","hashOfConfig":"17"},{"size":311,"mtime":1634871071000,"results":"29","hashOfConfig":"17"},{"size":20515,"mtime":1635563930169,"results":"30","hashOfConfig":"17"},{"size":2111,"mtime":1634871071000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wgnq1x",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\index.js",[],"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\reportWebVitals.js",[],["73","74"],"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\App.jsx",["75"],"import React from 'react';\nimport Login from './pages/Login/Login'\nimport List from './pages/list'\n\nclass App extends React.Component{\n  render(){\n    return (\n      <div>\n        <Login/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\list.js",["76","77"],"import React, { createContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass TrData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.users.map((user, i) => {\r\n                return (\r\n                    <tr key={user.id} className=\"text-center\">\r\n                        <td>{user.id}</td>\r\n                        <td>{user.title}</td>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.sex}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nvar data =[];\r\n\r\nexport default class List extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          users:[],\r\n          isLoaded:false\r\n        }\r\n    } \r\n    componentDidMount(){\r\n        const _this=this;    //先存一下this，以防使用箭头函数this会指向我们不希望它所指向的对象。\r\n        axios.get('https://5b5e71c98e9f160014b88cc9.mockapi.io/api/v1/lists')\r\n        .then(function (response) {\r\n          data=response.data\r\n          console.log(data)\r\n          _this.setState({\r\n            users:response.data,\r\n            isLoaded:true,\r\n          });\r\n          \r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n          _this.setState({\r\n            isLoaded:false,\r\n            error:error\r\n          })\r\n        })\r\n      }\r\n\r\n  render() {\r\n      return (\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">ID</th>\r\n              <th className=\"text-center\">姓名</th>\r\n              <th className=\"text-center\">年龄</th>\r\n              <th className=\"text-center\">性别</th>\r\n            </tr>\r\n          </thead>\r\n        <tbody>\r\n           <TrData users={this.state.users}/>\r\n        </tbody>\r\n        </table>\r\n      )  \r\n  }\r\n}\r\n","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Login.jsx",[],"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\ForgetPSW.jsx",["78"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Radio } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nexport default class ForgetPSW extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            IDcard: \"\",\r\n            type: \"\"\r\n        };\r\n    }\r\n    onFinish = (values) => {\r\n        this.setState({\r\n            type: usertype\r\n        })\r\n        /*\r\n        if (this.state.type === 1) {\r\n            this.props.history.push({ pathname: '/StudentCenter/StudentInfo', state: { username: name, psw: passw } });\r\n        }\r\n        else if (this.state.type === 2) {\r\n            this.props.history.push({ pathname: '/TeacherCenter/TeacherInfo', state: { username: name, psw: passw } });\r\n        }\r\n        else if (this.state.type === 3) {\r\n            this.props.history.push({ pathname: '/ManagerCenter/ManagerInfo', state: { username: name, psw: passw } });\r\n        }*/\r\n        const id = this.state.username;\r\n        const idcard = this.state.idcard;\r\n        const type = this.state.type;\r\n        console.log(type);\r\n        axios\r\n            .post('http://127.0.0.1:8000/api/findpsw',\r\n                transformFormData({\r\n                    id: id,\r\n                    IDcard: idcard,\r\n                    type: type\r\n                }),\r\n                {\r\n                    headers: { 'content-type': 'application/x-www-form-urlencoded' }\r\n                }\r\n            ).then((response) => {\r\n                // get response\r\n                console.log(response);\r\n\r\n                const code=response.data.code;\r\n\r\n                var psw = response.data.data;\r\n                console.log(psw);\r\n                if (code === 200) {\r\n                    alert('您的密码：'+psw);                    \r\n                }\r\n                else{\r\n                    alert('身份验证失败，拒绝找回密码请求');\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                alert('身份验证失败，拒绝找回密码请求');\r\n              })\r\n\r\n    };\r\n\r\n    nameChange = (e) => {\r\n        let value = e.target.value;\r\n        this.setState({\r\n            username: value\r\n        })\r\n    }\r\n\r\n    cardChange = (e) => {\r\n        let value = e.target.value;\r\n        console.log(value);\r\n        this.setState({\r\n            idcard: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { username } = this.state;\r\n        const { idcard } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-content-wrap\">\r\n                    <div className=\"login-content\">\r\n                        <img className=\"logo\" src=\"resources/logo.png\" />\r\n\r\n                        <div id=\"body\" className=\"login-from\">\r\n                            <Form\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}>\r\n                                <Form.Item name=\"username\" rules={\r\n                                    [\r\n                                        { required: true, message: '请输入用户名！' }\r\n                                    ]\r\n                                }>\r\n                                    <Input value={username} onChange={this.nameChange} placeholder=\"用户名\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"IDcard\" rules={\r\n                                    [\r\n                                        { required: true, message: '请输入身份证号！' },\r\n\r\n                                    ]\r\n                                }>\r\n                                    <Input value={idcard} onChange={this.cardChange} type=\"password\" placeholder=\"身份证号\" />\r\n                                </Form.Item>\r\n\r\n\r\n                                <Choose></Choose>\r\n\r\n                                <Form.Item>\r\n                                    <br />\r\n                                    <Button className=\"login-form-button\" htmlType=\"submit\" type=\"primary\" shape=\"round\" size='large'>\r\n                                        找回\r\n                                    </Button>\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Link to=\"/LoginInterface\">\r\n                                        <Button className=\"login-form-button\" type=\"primary\" shape=\"round\" size='large'>\r\n                                            返回登录\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nvar usertype = 1;\r\n\r\nconst Choose = () => {\r\n    const [value, setValue] = React.useState(1);\r\n\r\n    const onChange = e => {\r\n        usertype = e.target.value;\r\n        console.log(usertype);\r\n        console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n\r\n    };\r\n\r\n    return (\r\n        <Radio.Group onChange={onChange} value={value} style={{ marginLeft: 30 }}>\r\n            <Radio name=\"choice\" value={1} >学生</Radio>\r\n            <Radio name=\"choice\" value={2}>教师</Radio>\r\n            <Radio name=\"choice\" value={3}>管理员</Radio>\r\n        </Radio.Group>\r\n    );\r\n};\r\n\r\n\r\nconst transformFormData = (obj) => {\r\n    let formData = new FormData()\r\n\r\n    for (let k in obj) {\r\n        formData.append(k, obj[k])\r\n    }\r\n\r\n    return formData\r\n}\r\n\r\n","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Create.jsx",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React, { Component } from 'react';\r\nimport CardExampleCard from './ui'\r\nimport {Card, Button,Layout,Col,Row ,Form,Input,Checkbox, List,Image,Slider,InputNumber} from 'antd'\r\nimport {FormOutlined, DollarCircleOutlined, SketchOutlined,QuestionCircleOutlined ,LeftOutlined} from '@ant-design/icons'\r\nimport Background from './123.jpeg';\r\nimport {Link} from 'react-router-dom'\r\nimport { Color } from '@antv/attr';\r\nconst {Meta} = Card\r\nlet web3 = require('./web3');\r\nlet lotteryInstance = require('./eth')\r\nconst {Content } = Layout\r\n\r\nconst data = [\r\n    {\r\n      title: 'Title 1',\r\n    },\r\n    {\r\n      title: 'Title 2',\r\n    },\r\n    {\r\n      title: 'Title 3',\r\n    },\r\n    {\r\n      title: 'Title 4',\r\n    },\r\n    {\r\n      title: 'Title 5',\r\n    },\r\n    {\r\n      title: 'Title 6',\r\n    },\r\n  ];\r\n  for (let i = 0; i < 23; i++) {\r\n    data.push({\r\n        \r\n        title: 'Title'+i,\r\n        \r\n      });\r\n  }\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            imgurl: \"\",\r\n            type: \"\",\r\n            magic: 0,\r\n            strength:0,\r\n            intelligence:0,\r\n            luck: 0,\r\n\r\n            \r\n\r\n        };\r\n    }\r\n    async componentWillMount() {\r\n        \r\n        // //获取当前的所有地址\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length!=0){\r\n            console.log(accounts.length)\r\n            this.state.disabled=false;\r\n        }\r\n        \r\n        this.setState({\r\n            \r\n        })\r\n        \r\n    }\r\n    onFinish=async()=>{\r\n        let accounts = await web3.eth.getAccounts()\r\n        try{\r\n            await lotteryInstance.methods.createNewCharacter(this.state.name,this.state.imgurl,this.state.magic,this.state.strength,this.state.intelligence,this.state.luck).send({\r\n                from: accounts[0],\r\n                value: web3.utils.toWei('0.1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            alert(\"Create success!\");\r\n        }\r\n        catch(e){\r\n            alert(\"Create fail!\");\r\n        }\r\n        \r\n    }\r\n    onFinishFailed=()=>{\r\n        \r\n    }\r\n    nameChange=(value)=>{\r\n        this.setState({\r\n            name:value.target.value\r\n        })\r\n    }\r\n    reload=()=>{\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n    imgurlChange=(value)=>{\r\n        console.log(value.target.value)\r\n        this.setState({\r\n            imgurl:value.target.value,\r\n        })\r\n    }\r\n    magicChange=value=>{\r\n        this.setState({\r\n            magic:value,\r\n        })\r\n    }\r\n    strengthChange=value=>{\r\n        this.setState({\r\n        strength:value,\r\n        })\r\n    }\r\n    intelligenceChange=value=>{\r\n        this.setState({\r\n            intelligence:value,\r\n        })\r\n    }\r\n    luckChange=value=>{\r\n        this.setState({\r\n            luck:value,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"login2\">\r\n                \r\n                <div className=\"login-content-wrap2\">\r\n                    <br/><br/><h1 style={{textAlign:\"center\"}} >Create Character</h1>\r\n                    \r\n                </div>\r\n                <div className=\"login-content-wrap53\" style={{}}>\r\n                    \r\n                    <Button style={{marginLeft: 20, marginTop:10}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/List\"}}>\r\n                            <LeftOutlined />Back\r\n                        </Link>    \r\n                    </Button>\r\n\r\n                </div>\r\n                <div className=\"login-content-wrap5\">\r\n                    <div className=\"login-content-wrapr\">\r\n                        <div id=\"body\" className=\"login-form\">\r\n                            \r\n                            <Form\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}>\r\n                                \r\n                                <Form.Item label=\"Name:\" name=\"name\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the name of your character' }\r\n                                    ]\r\n                                }>\r\n                                    <Input value={this.state.name} onChange={this.nameChange} placeholder=\"name\" />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Imgurl:\" name=\"imgurl\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the imgurl' },\r\n\r\n                                    ]\r\n                                }>\r\n                                    <Input value={this.state.imgrul} onChange={this.imgurlChange} placeholder=\"imgurl\" />\r\n                                </Form.Item >\r\n                                <Form.Item>\r\n                                    <Button ghost className=\"login-form-button2\" htmlType=\"submit\" type=\"primary\" shape=\"round\" size='large'>\r\n                                        Create!\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"login-content-wrapl\" style={{textAlign:'center'}}>\r\n                    <Image\r\n                        width={300}\r\n                        height={400}\r\n                        src={this.state.imgurl}\r\n                        fallback=\"https://img.alicdn.com/tps/TB1pfG4IFXXXXc6XXXXXXXXXXXX.jpg\"\r\n                    />\r\n                    <br/>\r\n                    </div>\r\n                    <div className=\"login-content-wraptips\">\r\n                        <div className=\"login-form2\">\r\n                            {/* <h1>Tips:</h1> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Bidding.jsx",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { Component } from 'react';\r\nimport CardExampleCard from './ui'\r\nimport {Card, Button,Layout,Col,Row ,Modal, List,Image,Descriptions,Badge,Tag,Form,Input,InputNumber} from 'antd'\r\nimport {LeftOutlined,FormOutlined, DollarCircleOutlined, SketchOutlined,QuestionCircleOutlined ,FieldTimeOutlined} from '@ant-design/icons'\r\nimport Background from './123.jpeg';\r\nimport {Link} from 'react-router-dom'\r\nimport { Color } from '@antv/attr';\r\nimport { ListItem } from 'semantic-ui-react';\r\nimport { toInteger } from '@antv/util';\r\nconst {Meta} = Card\r\nlet web3 = require('./web3');\r\nlet lotteryInstance = require('./eth')\r\nconst {Content } = Layout\r\n\r\n\r\nfunction States  (e) {\r\n    if(e.e.onsale){\r\n        return <Tag color=\"magenta\">onsale</Tag>\r\n    }\r\n    else{\r\n        if(e.e.setaside==true){\r\n            return <Tag color=\"orange\">to be claimed</Tag>\r\n        }\r\n        else{\r\n            return <Tag color=\"blue\">stable</Tag>\r\n        }\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n    \r\n        this.state = {\r\n            data:[],\r\n            loading:false,\r\n            visible:false,\r\n            visible2:false,\r\n            ownerhistory:[],\r\n            choosedmodelid:0,\r\n            auctiondurationday:0,\r\n            auctiondurationhour:0,\r\n            auctiondurationminute:0,\r\n            startprice:0,\r\n            maxprice:0,\r\n            bidprice:null,\r\n            maximumbid:'N/A',\r\n            day:'N/A',\r\n            hour:'N/A',\r\n            minute:'N/A'\r\n        }\r\n      }\r\n      async componentWillMount() {\r\n            \r\n        // //获取当前的所有地址\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length!=0){\r\n            console.log(accounts.length)\r\n        }\r\n        let result = await lotteryInstance.methods.getbid(accounts[0]).call();\r\n        console.log(result);\r\n        for(let i=0;i<=result.length-1;i++){\r\n            this.state.data.push({\r\n                id:i,\r\n                ntfid:result[i][0],\r\n                name:result[i][1],\r\n                imgurl:result[i][2],\r\n                magic:result[i][3],\r\n                strth:result[i][4],\r\n                integ:result[i][5],\r\n                lucky:result[i][6],\r\n                level:result[i][7],\r\n                ownerhistory:result[i][8],\r\n                onsale:result[i][9],\r\n                startprice:result[i][10]*1.0/100,\r\n                bidderhistory:result[i][11],\r\n                bidpricehistory:result[i][12],\r\n                setaside:result[i][13],\r\n                \r\n            })\r\n        }\r\n        \r\n        this.setState({\r\n            \r\n        })\r\n        \r\n      }\r\n      showModal = async  (e) => {\r\n            \r\n        delete this.state.ownerhistory\r\n        this.state.ownerhistory=[];\r\n    \r\n        for(let i=0;i<=e.ownerhistory.length-1;i++){\r\n            this.state.ownerhistory.push({\r\n                hi:e.ownerhistory[i]\r\n            })\r\n        }\r\n        let accounts = await web3.eth.getAccounts()\r\n        let t=0;\r\n        for(let i=0;i<=e.bidderhistory.length-1;i++){\r\n          if(accounts[0]==e.bidderhistory[i]){\r\n            this.setState({\r\n              maximumbid:e.bidpricehistory[i]*1.0/100,\r\n            })\r\n            t=1;\r\n          }\r\n        }\r\n        if(t==0){\r\n            this.setState({\r\n                maximumbid:'N/A',\r\n            })\r\n        }\r\n        console.log(this.state.maximumbid);\r\n        this.setState({\r\n          visible: true,\r\n          choosedmodelid:e.id,\r\n        });\r\n        if(e.bidderhistory.length==0){\r\n            this.setState({\r\n                maxprice:e.startprice*1.0/100\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                maxprice:e.bidpricehistory[e.bidderhistory.length-1]*1.0/100\r\n            })\r\n        }\r\n\r\n        let time=(new Date().getTime()/1000);\r\n        let time2=toInteger(time);\r\n        console.log(time2);\r\n        let diff=this.state.data[this.state.choosedmodelid].endtime-time2;\r\n        if(diff<=0){\r\n            this.setState({\r\n                day:'N/A',\r\n                hour:'N/A',\r\n                minute:'N/A'\r\n            })\r\n        }\r\n        else{\r\n            let day=toInteger(diff/3600/24);\r\n            let hour=toInteger((diff-day*3600*24)/3600);\r\n            let minute=toInteger((diff-day*3600*24-hour*3600)/60);\r\n            this.setState({\r\n                day:day,\r\n                hour:hour,\r\n                minute:minute,\r\n            })\r\n            console.log(day,hour,minute);\r\n        }\r\n      };\r\n      confirm=async()=>{\r\n        if(this.state.data[this.state.choosedmodelid].onsale==false&&this.state.data[this.state.choosedmodelid].setaside==true){\r\n            let accounts = await web3.eth.getAccounts()\r\n\r\n            try{\r\n                await lotteryInstance.methods.buyerconfirm(this.state.data[this.state.choosedmodelid].ntfid).send({\r\n                    from:accounts[0],\r\n                    value: 0,\r\n                    gas: '200000',\r\n                });\r\n                alert(\"Confirm success!\");\r\n            }\r\n            catch(e){\r\n                alert(\"Fail!\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"The auction is not over yet!\");\r\n        }\r\n        console.log(this);\r\n      }\r\n      bid=()=>{\r\n        if(this.state.data[this.state.choosedmodelid].setaside==true){\r\n            alert(\"This auction is already over! Please wait for the owner to confirm.\");\r\n        }\r\n        else\r\n        this.setState({\r\n            visible2:true,\r\n        })\r\n        \r\n        \r\n      }\r\n      changebideprice=(value)=>{\r\n        this.setState({\r\n          bidprice:value\r\n        })\r\n      }\r\n      participateauction = async()=>{\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length!=0){\r\n            console.log(accounts.length)\r\n        }\r\n        console.log(this.state.data[this.state.choosedmodelid].ntfid);\r\n            try{\r\n                await lotteryInstance.methods.bid(this.state.data[this.state.choosedmodelid].ntfid,accounts[0]).send({\r\n                    from: accounts[0],\r\n                    value: web3.utils.toWei(this.state.bidprice.toString(), 'ether'),\r\n                    gas: '200000',\r\n                })\r\n                alert(\"Bid success!\");\r\n            }\r\n            catch(e){\r\n              console.log(e);\r\n                alert(\"Bid fail!\");\r\n            }\r\n      }\r\n      \r\n      handleCancel = () => {\r\n        this.setState({ visible: false });\r\n      };\r\n      handleCancel2 = () => {\r\n          this.setState({ visible2: false });\r\n      };\r\n\r\n    render() {\r\n        // this.helpFunction()\r\n        return (\r\n            \r\n            <div className=\"login2\">\r\n                \r\n                <div className=\"login-content-wrap2\">\r\n                    <br/><br/><h1 style={{textAlign:\"center\"}} >Your Particapating Auction</h1>\r\n                    \r\n                </div>\r\n                <div className=\"login-content-wrap3\" >\r\n                    <Button style={{marginLeft: 20, marginTop:10}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/List\"}}>\r\n                            <LeftOutlined />Back\r\n                        </Link>    \r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"login-content-wrap4\">\r\n                    <br/>\r\n                    <List\r\n                        grid={{\r\n                        gutter: 0,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 6,\r\n                        lg: 6,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                        }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                              console.log(page);\r\n                            },\r\n                            pageSize: 5,\r\n                          }}\r\n                        dataSource={this.state.data}\r\n                        renderItem={item => (\r\n                        <List.Item>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 250}}\r\n                                cover={<img width={250} height={300} alt=\"example\" src={item.imgurl} />}\r\n                                onClick={()=>this.showModal(item)}\r\n                            >\r\n                                {item.name}\r\n                            </Card>\r\n                            \r\n                            <Modal\r\n                                visible={this.state.visible}\r\n                                title=\"Character's Information\"\r\n                                onOk={this.handleOk}\r\n                                onCancel={this.handleCancel}\r\n                                footer={[\r\n                                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                                    Back\r\n                                    </Button>,\r\n                                    <Button key=\"submit\" type=\"primary\" onClick={()=>this.confirm(item)}>\r\n                                    Confirm\r\n                                    </Button>,\r\n                                    <Button key=\"submit\" type=\"primary\" onClick={()=>this.bid(item)}>\r\n                                    Bid\r\n                                    </Button>,\r\n                                ]}\r\n                                width={window.innerWidth*0.5}\r\n                                >\r\n                                 <Row>\r\n                                    <Col span={8}>\r\n                                        <Image\r\n                                            width={200}\r\n                                            height={250}\r\n                                            src={this.state.data[this.state.choosedmodelid].imgurl}\r\n                                            \r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                    <Descriptions layout=\"vertical\" bordered size={\"small\"}>\r\n                                        <Descriptions.Item label=\"Name\" span={2}>{this.state.data[this.state.choosedmodelid].name}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Rest of time\" span={2}><FieldTimeOutlined /> {this.state.day}d : {this.state.hour}h : {this.state.minute}m</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Current bid price\" span={2}>\r\n                                          <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                          {this.state.maxprice}\r\n                                        </Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Your maximum bid\" span={2}>\r\n                                          <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                          {this.state.maximumbid}\r\n                                        </Descriptions.Item>\r\n                                        {/* <Descriptions.Item label=\"Level\" span={1.5}>{this.state.data[this.state.choosedmodelid].level}</Descriptions.Item> */}\r\n                                        <Descriptions.Item label=\"State\" span={2}><States e={this.state.data[this.state.choosedmodelid]}/></Descriptions.Item>\r\n                                        \r\n                                        {/* <Descriptions.Item label=\"Status\" span={1}>\r\n                                        \r\n                                        <Badge status=\"processing\" text=\"on sale\" />\r\n                                        </Descriptions.Item> */}\r\n                                        {/* <Descriptions.Item label=\"Magic\" span={1.5}>{this.state.data[this.state.choosedmodelid].magic}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Strength\" span={1.5}>{this.state.data[this.state.choosedmodelid].strth}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Intelligence\" span={1.5}>{this.state.data[this.state.choosedmodelid].integ}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Luck\" span={1.5}>{this.state.data[this.state.choosedmodelid].lucky}</Descriptions.Item> */}\r\n                                        <Descriptions.Item label=\"Owner History\">\r\n                                            <List dataSource={this.state.ownerhistory}\r\n                                                renderItem={item2 => (\r\n                                                    <div>{item2.hi}</div>\r\n                                                )}\r\n                                            />\r\n                                                \r\n                                        </Descriptions.Item>\r\n                                    </Descriptions>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                    \r\n                            </Modal>\r\n                            <Modal\r\n                                visible={this.state.visible2}\r\n                                title={\"Participate in Bidding\"}\r\n                                onCancel={this.handleCancel2}\r\n                                footer={[\r\n                                ]}\r\n                                width={window.innerWidth*0.6}\r\n                                >\r\n                            <div id=\"body\" className=\"login-formown\">\r\n                            \r\n                            <Form onFinish={this.participateauction} style={{textAlign:'center'}}>\r\n                                \r\n                                <Form.Item label=\"Starting Price:\"  name=\"startingsrice\" >\r\n                                <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                    {this.state.maxprice}\r\n                                    \r\n                                </Form.Item>\r\n                                <Form.Item label=\"Current Price:\"  name=\"startingsrice\" >\r\n                                  <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                    {this.state.maxprice}\r\n                                    \r\n                                </Form.Item>\r\n                                <Form.Item label={<div>Your Bid Price<svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg></div>}  name=\"bidprice\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the Bid Price' }\r\n                                    ]\r\n                                }>\r\n                                    \r\n                                    <InputNumber min={this.state.maxprice-(-0.01)} value={this.state.bidprice} onChange={this.changebideprice} />\r\n                                    \r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item>\r\n                                    <Button ghost  htmlType=\"submit\" type=\"primary\" shape=\"round\" size='large'>\r\n                                        Bid!\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            </div>\r\n                            </Modal>\r\n                                \r\n                        </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\List.jsx",["116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, { Component } from 'react';\r\nimport CardExampleCard from './ui'\r\nimport {Card, Button,Layout,Col,Row , List,Modal,Image,Descriptions,Form,InputNumber,Tag} from 'antd'\r\nimport {FormOutlined, DollarCircleOutlined, SketchOutlined,QuestionCircleOutlined,FieldTimeOutlined } from '@ant-design/icons'\r\nimport Background from './123.jpeg';\r\nimport {Link} from 'react-router-dom'\r\nimport { Color } from '@antv/attr';\r\nimport { toInteger } from '@antv/util';\r\nconst {Meta} = Card\r\nlet web3 = require('./web3');\r\nlet lotteryInstance = require('./eth')\r\n\r\n\r\nfunction States  (e) {\r\n  if(e.e.onsale){\r\n      return <Tag color=\"magenta\">onsale</Tag>\r\n  }\r\n  else{\r\n      if(e.e.setaside==false){\r\n          return <Tag color=\"orange\">to be claimed</Tag>\r\n      }\r\n      else{\r\n          return <Tag color=\"blue\">stable</Tag>\r\n      }\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n        data:[],\r\n        loading:false,\r\n        visible:false,\r\n        visible2:false,\r\n        ownerhistory:[],\r\n        choosedmodelid:0,\r\n        auctiondurationday:0,\r\n        auctiondurationhour:0,\r\n        auctiondurationminute:0,\r\n        startprice:0,\r\n        bidprice:null,\r\n        maxprice:0,\r\n        maximumbid:'N/A',\r\n        day:'N/A',\r\n        hour:'N/A',\r\n        minute:'N/A'\r\n    }\r\n  }\r\n  async componentWillMount() {\r\n        \r\n    // //获取当前的所有地址\r\n    let accounts = await web3.eth.getAccounts()\r\n    let result = await lotteryInstance.methods.getAuction().call();\r\n    let result2=await lotteryInstance.methods.refreshAllAuction().call();\r\n    for(let i=0;i<=result.length-1;i++){\r\n        this.state.data.push({\r\n            id:i,\r\n            ntfid:result[i][0],\r\n            name:result[i][1],\r\n            imgurl:result[i][2],\r\n            magic:result[i][3],\r\n            strth:result[i][4],\r\n            integ:result[i][5],\r\n            lucky:result[i][6],\r\n            level:result[i][7],\r\n            ownerhistory:result[i][8],\r\n            onsale:result[i][9],\r\n            startprice:result[i][10]*1.0/100,\r\n            bidderhistory:result[i][11],\r\n            bidpricehistory:result[i][12],\r\n            setaside:result[i][13],\r\n            endtime:result[i][14],\r\n        })\r\n    }\r\n    \r\n    this.setState({\r\n        \r\n    })\r\n    \r\n  }\r\n  showModal = async  (e) => {\r\n        \r\n    delete this.state.ownerhistory\r\n    this.state.ownerhistory=[];\r\n\r\n    for(let i=0;i<=e.ownerhistory.length-1;i++){\r\n        this.state.ownerhistory.push({\r\n            hi:e.ownerhistory[i]\r\n        })\r\n    }\r\n    let accounts = await web3.eth.getAccounts()\r\n    let t=0;\r\n    for(let i=0;i<=e.bidderhistory.length-1;i++){\r\n      if(accounts[0]==e.bidderhistory[i]){\r\n        this.setState({\r\n          maximumbid:e.bidpricehistory[i]*1.0/100,\r\n        })\r\n        t=1;\r\n      }\r\n    }\r\n    if(t==0){\r\n        this.setState({\r\n            maximumbid:'N/A',\r\n        })\r\n    }\r\n    this.setState({\r\n      visible: true,\r\n      choosedmodelid:e.id,\r\n      \r\n    });\r\n    if(e.bidderhistory.length==0){\r\n        this.setState({\r\n            maxprice:e.startprice\r\n        })\r\n    }\r\n    else{\r\n        this.setState({\r\n            maxprice:e.bidpricehistory[e.bidderhistory.length-1]*1.0/100\r\n        })\r\n    }\r\n    let time=(new Date().getTime()/1000);\r\n    let time2=toInteger(time);\r\n    console.log(time2);\r\n    let diff=this.state.data[this.state.choosedmodelid].endtime-time2;\r\n    if(diff<=0){\r\n        this.setState({\r\n            day:'N/A',\r\n            hour:'N/A',\r\n            minute:'N/A'\r\n        })\r\n    }\r\n    else{\r\n        let day=toInteger(diff/3600/24);\r\n        let hour=toInteger((diff-day*3600*24)/3600);\r\n        let minute=toInteger((diff-day*3600*24-hour*3600)/60);\r\n        this.setState({\r\n            day:day,\r\n            hour:hour,\r\n            minute:minute,\r\n        })\r\n        console.log(day,hour,minute);\r\n    }\r\n    \r\n    \r\n\r\n  };\r\n  bid=async()=>{\r\n    let accounts = await web3.eth.getAccounts()\r\n    if(this.state.data[this.state.choosedmodelid].ownerhistory[this.state.data[this.state.choosedmodelid].ownerhistory.length-1]==accounts[0]){\r\n        alert(\"You are the owner of this character!\");\r\n    }\r\n    else\r\n    this.setState({\r\n      visible2:true,\r\n    })\r\n    console.log(this);\r\n  }\r\n  changebideprice=(value)=>{\r\n    this.setState({\r\n      bidprice:value\r\n    })\r\n  }\r\n  participateauction = async()=>{\r\n    let accounts = await web3.eth.getAccounts()\r\n    if(accounts.length!=0){\r\n        console.log(accounts.length)\r\n    }\r\n    console.log(this.state.data[this.state.choosedmodelid].ntfid);\r\n        try{\r\n            await lotteryInstance.methods.bid(this.state.data[this.state.choosedmodelid].ntfid,accounts[0]).send({\r\n                from: accounts[0],\r\n                value: web3.utils.toWei(this.state.bidprice.toString(), 'ether'),\r\n                gas: '200000',\r\n            })\r\n            alert(\"Bid success!\");\r\n        }\r\n        catch(e){\r\n          console.log(e);\r\n            alert(\"Bid fail!\");\r\n        }\r\n  }\r\n  \r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n  handleCancel2 = () => {\r\n      this.setState({ visible2: false });\r\n  };\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"login2\">\r\n                \r\n                <div className=\"login-content-wrap2\">\r\n                    <br/><br/><h1 style={{textAlign:\"center\"}} >Characters Market</h1>\r\n                    \r\n                </div>\r\n                <div className=\"login-content-wrap3\" style={{textAlign:'center'}}>\r\n                    <Button style={{marginLeft: 20,marginTop:10}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/Create\"}}>\r\n                            <FormOutlined />Create your own Characters\r\n                        </Link> \r\n                    </Button>\r\n                    <Button style={{marginLeft: 20}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/Own\"}}>\r\n                        <DollarCircleOutlined />Characters already hold\r\n                        </Link>  \r\n                        \r\n                    </Button>\r\n                    <Button style={{marginLeft: 20}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/Bidding\"}}>\r\n                        <SketchOutlined />Bidding Characters\r\n                        </Link>\r\n                    </Button>\r\n                    {/* <Button style={{marginLeft: 20}} shape=\"round\" type=\"primary\">\r\n                        <Link to={{pathname:\"/Help\"}}>\r\n                            <QuestionCircleOutlined />What is NFT Characters?\r\n                        </Link>    \r\n                    </Button> */}\r\n                </div>\r\n\r\n                <div className=\"login-content-wrap4\">\r\n                    <br/>\r\n                    <List\r\n                        grid={{\r\n                        gutter: 0,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 6,\r\n                        lg: 6,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                        }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                              console.log(page);\r\n                            },\r\n                            pageSize: 5,\r\n                          }}\r\n                        dataSource={this.state.data}\r\n                        renderItem={item => (\r\n                        <List.Item>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 250}}\r\n                                cover={<img width={250} height={300} alt=\"example\" src={item.imgurl} />}\r\n                                onClick={()=>this.showModal(item)}\r\n                            >\r\n                                {item.name}\r\n                            </Card>\r\n                            \r\n                            <Modal\r\n                                visible={this.state.visible}\r\n                                title=\"Character's Information\"\r\n                                onOk={this.handleOk}\r\n                                onCancel={this.handleCancel}\r\n                                footer={[\r\n                                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                                    Back\r\n                                    </Button>,\r\n                                    <Button key=\"submit\" type=\"primary\" onClick={()=>this.bid(item)}>\r\n                                    Bid\r\n                                    </Button>,\r\n                                ]}\r\n                                width={window.innerWidth*0.5}\r\n                                >\r\n                                 <Row>\r\n                                    <Col span={8}>\r\n                                        <Image\r\n                                            width={200}\r\n                                            height={250}\r\n                                            src={this.state.data[this.state.choosedmodelid].imgurl}\r\n                                            \r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                    <Descriptions layout=\"vertical\" bordered size={\"middle\"}>\r\n                                        <Descriptions.Item label=\"Name\" span={2}>{this.state.data[this.state.choosedmodelid].name}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Rest of time\" span={2}><FieldTimeOutlined /> {this.state.day}d : {this.state.hour}h : {this.state.minute}m</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Current bid price\" span={2}>\r\n                                          <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                          {this.state.maxprice}\r\n                                        </Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Your maximum bid\" span={2}>\r\n                                          <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                          {this.state.maximumbid}\r\n                                        </Descriptions.Item>\r\n                                        {/* <Descriptions.Item label=\"Level\" span={1.5}>{this.state.data[this.state.choosedmodelid].level}</Descriptions.Item> */}\r\n                                        <Descriptions.Item label=\"State\" span={2}><States e={this.state.data[this.state.choosedmodelid]}/></Descriptions.Item>\r\n                                        \r\n                                        {/* <Descriptions.Item label=\"Status\" span={1}>\r\n                                        \r\n                                        <Badge status=\"processing\" text=\"on sale\" />\r\n                                        </Descriptions.Item> */}\r\n                                        {/* <Descriptions.Item label=\"Magic\" span={1.5}>{this.state.data[this.state.choosedmodelid].magic}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Strength\" span={1.5}>{this.state.data[this.state.choosedmodelid].strth}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Intelligence\" span={1.5}>{this.state.data[this.state.choosedmodelid].integ}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Luck\" span={1.5}>{this.state.data[this.state.choosedmodelid].lucky}</Descriptions.Item> */}\r\n                                        <Descriptions.Item label=\"Owner History\">\r\n                                            <List dataSource={this.state.ownerhistory}\r\n                                                renderItem={item2 => (\r\n                                                    <div>{item2.hi}</div>\r\n                                                )}\r\n                                            />\r\n                                        </Descriptions.Item>\r\n                                    </Descriptions>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                    \r\n                            </Modal>\r\n                            <Modal\r\n                                visible={this.state.visible2}\r\n                                title={\"Participate in Bidding\"}\r\n                                onCancel={this.handleCancel2}\r\n                                footer={[\r\n                                ]}\r\n                                width={window.innerWidth*0.3}\r\n                                >\r\n                            <div id=\"body\" className=\"login-formown\">\r\n                            \r\n                            <Form onFinish={this.participateauction} style={{textAlign:'center'}}>\r\n                                \r\n                                <Form.Item label=\"Starting Price:\"  name=\"startingsrice\" >\r\n                                <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                    {this.state.maxprice}\r\n                                    \r\n                                </Form.Item>\r\n                                <Form.Item label=\"Current Price:\"  name=\"startingsrice\" >\r\n                                  <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                    {this.state.maxprice}\r\n                                    \r\n                                </Form.Item>\r\n                                <Form.Item label={<div>Your Bid Price</div>}  name=\"bidprice\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the Bid Price' }\r\n                                    ]\r\n                                }>\r\n                                    \r\n                                    <InputNumber min={this.state.maxprice-(-0.01)} value={this.state.bidprice} onChange={this.changebideprice} />\r\n                                    \r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item>\r\n                                    <Button ghost  htmlType=\"submit\" type=\"primary\" shape=\"round\" size='large'>\r\n                                        Bid!\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            </div>\r\n                            </Modal>\r\n                                \r\n                        </List.Item>\r\n                        )}\r\n                    />\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Own.jsx",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { Component } from 'react';\r\nimport CardExampleCard from './ui'\r\nimport {Card, Button,Layout,Col,Row ,Modal, List,Image,Descriptions,Badge,Tag,Form,Input,InputNumber} from 'antd'\r\nimport {LeftOutlined,FormOutlined, DollarCircleOutlined, SketchOutlined,QuestionCircleOutlined } from '@ant-design/icons'\r\nimport Background from './123.jpeg';\r\nimport {Link} from 'react-router-dom'\r\nimport { Color } from '@antv/attr';\r\nimport { ListItem } from 'semantic-ui-react';\r\nimport { toInteger } from '@antv/util';\r\nconst {Meta} = Card\r\nlet web3 = require('./web3');\r\nlet lotteryInstance = require('./eth')\r\nconst {Content } = Layout\r\n\r\n\r\nfunction States  (e) {\r\n    if(e.e.onsale){\r\n        return <Tag color=\"magenta\">onsale</Tag>\r\n    }\r\n    else{\r\n        if(e.e.setaside==true){\r\n            return <Tag color=\"orange\">to be claimed</Tag>\r\n        }\r\n        else{\r\n            return <Tag color=\"blue\">stable</Tag>\r\n        }\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            data:[],\r\n            loading:false,\r\n            visible:false,\r\n            visible2:false,\r\n            visible3:false,\r\n            visible4:false,\r\n            ownerhistory:[],\r\n            bidderhistory:[],\r\n            choosedmodelid:0,\r\n            auctiondurationday:0,\r\n            auctiondurationhour:0,\r\n            auctiondurationminute:0,\r\n            maxprice:0,\r\n            startprice:0,\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n\r\n        // //获取当前的所有地址\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length!=0){\r\n            console.log(accounts.length)\r\n            this.state.disabled=false;\r\n        }\r\n        \r\n            let result = await lotteryInstance.methods.getCharacter(accounts[0]).call();\r\n            console.log(result);\r\n            for(let i=0;i<=result.length-1;i++){\r\n            this.state.data.push({\r\n                id:i,\r\n                ntfid:result[i][0],\r\n                name:result[i][1],\r\n                imgurl:result[i][2],\r\n                magic:result[i][3],\r\n                strth:result[i][4],\r\n                integ:result[i][5],\r\n                lucky:result[i][6],\r\n                level:result[i][7],\r\n                ownerhistory:result[i][8],\r\n                onsale:result[i][9],\r\n                startprice:result[i][10]*1.0/100,\r\n                bidderhistory:result[i][11],\r\n                bidpricehistory:result[i][12],\r\n                setaside:result[i][13],\r\n\r\n                \r\n            })\r\n            }\r\n        \r\n        \r\n        \r\n        this.setState({\r\n            \r\n        })\r\n        \r\n    }\r\n    \r\n    \r\n    showModal = (e) => {\r\n        \r\n        delete this.state.ownerhistory\r\n        this.state.ownerhistory=[];\r\n\r\n        for(let i=0;i<=e.ownerhistory.length-1;i++){\r\n            this.state.ownerhistory.push({\r\n                hi:e.ownerhistory[i]\r\n            })\r\n        }\r\n        this.setState({\r\n          visible: true,\r\n          choosedmodelid:e.id,\r\n        });\r\n        if(e.bidderhistory.length==0){\r\n            this.setState({\r\n                maxprice:e.startprice\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                maxprice:e.bidpricehistory[e.bidderhistory.length-1]*1.0/100\r\n            })\r\n        }\r\n      };\r\n    \r\n    sell =(e)=>{\r\n        if(e.onsale==true||e.setaside==true){\r\n            alert('This character is already on sale!');\r\n        }\r\n        else{\r\n            this.setState({ visible2: true });\r\n        }\r\n    }\r\n    auctionstatus =(e)=>{\r\n        if(this.state.data[this.state.choosedmodelid].onsale==true||this.state.data[this.state.choosedmodelid].setaside==true){\r\n            delete this.state.bidderhistory;\r\n            this.state.bidderhistory=[];\r\n            for(let i=0;i<=e.bidderhistory.length-1;i++){\r\n                this.state.bidderhistory.push({\r\n                    buyer:e.bidderhistory[i],\r\n                    price:e.bidpricehistory[i]*1.0/100\r\n                })\r\n\r\n            }\r\n            console.log(e.bidderhistory);\r\n            console.log(this.state.bidderhistory);\r\n            this.setState({\r\n                visible3:true,\r\n            })\r\n        }\r\n        else{\r\n            alert(\"The character is not on sale!\");\r\n        }\r\n    }\r\n    confirm=async()=>{\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(accounts);\r\n        if(this.state.data[this.state.choosedmodelid].onsale==false&&this.state.data[this.state.choosedmodelid].setaside==true){\r\n            if(this.state.data[this.state.choosedmodelid].bidderhistory.length==0){\r\n                try{\r\n                    await lotteryInstance.methods.ownerconfirm(this.state.data[this.state.choosedmodelid].ntfid).send({\r\n                        from:accounts[0],\r\n                        value: 0,\r\n                        gas: '200000',\r\n                    })\r\n                    // alert(\"Sell success!\");\r\n                    alert(\"No one bid your character, auction ended.\");\r\n                }\r\n                catch(e){\r\n                    alert(\"Fail!\");\r\n                    console.log(e);\r\n                }\r\n                \r\n            }\r\n            else{\r\n                this.setState({\r\n                    visible4:true,\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            alert(\"The auction is not over yet!\");\r\n        }\r\n    }\r\n    confirm2=async()=>{\r\n        let accounts = await web3.eth.getAccounts()\r\n        try{\r\n            await lotteryInstance.methods.ownerconfirm(this.state.data[this.state.choosedmodelid].ntfid).send({\r\n                from:accounts[0],\r\n                value: 0,\r\n                gas: '200000',\r\n            });\r\n            alert(\"Sell success!\");\r\n        }\r\n        catch(e){\r\n            alert(\"Fail!\");\r\n            console.log(e);\r\n        }\r\n    }\r\n    changeauctiondurationday=(value)=>{\r\n        this.setState({\r\n            auctiondurationday:value\r\n        })\r\n    }\r\n    changeauctiondurationhour=(value)=>{\r\n        this.setState({\r\n            auctiondurationhour:value\r\n        })\r\n    }\r\n    changeauctiondurationminute=(value)=>{\r\n        this.setState({\r\n            auctiondurationminute:value\r\n        })\r\n    }\r\n    changestartprice=(value)=>{\r\n        this.setState({\r\n            startprice:value\r\n        })\r\n        console.log(this.state.startprice*100)\r\n    }\r\n    createauction =async()=>{\r\n        let accounts = await web3.eth.getAccounts()\r\n        console.log(this.state.startprice,this.state.auctionduration);\r\n        let seconds=this.state.auctiondurationday*24*3600+this.state.auctiondurationhour*3600+this.state.auctiondurationminute*60;\r\n        try{\r\n            await lotteryInstance.methods.createNewAuction(this.state.data[this.state.choosedmodelid].ntfid,seconds,this.state.startprice*100).send({\r\n                from: accounts[0],\r\n                value: web3.utils.toWei('0.1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            alert(\"Create success!\");\r\n        }\r\n        catch(e){\r\n            alert(\"Create fail!\");\r\n            console.log(e);\r\n        }\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n    handleCancel2 = () => {\r\n        this.setState({ visible2: false });\r\n    };\r\n    handleCancel3 = () => {\r\n        this.setState({ visible3: false });\r\n    };\r\n    handleCancel4 = () => {\r\n        this.setState({ visible4: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"login2\">\r\n                \r\n                <div className=\"login-content-wrap2\">\r\n                    <br/><br/><h1 style={{textAlign:\"center\"}} >Your Own NFT Characters</h1>\r\n                    \r\n                </div>\r\n                <div className=\"login-content-wrap3\" >\r\n                    <Button style={{marginLeft: 20, marginTop:10}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/List\"}}>\r\n                            <LeftOutlined />Back\r\n                        </Link>    \r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"login-content-wrap4\">\r\n                    <br/>\r\n                    <List\r\n                        grid={{\r\n                        gutter: 0,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 6,\r\n                        lg: 6,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                        }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                              console.log(page);\r\n                            },\r\n                            pageSize: 5,\r\n                          }}\r\n                        dataSource={this.state.data}\r\n                        renderItem={item => (\r\n                        <List.Item>\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 250}}\r\n                                cover={<img width={250} height={300} alt=\"example\" src={item.imgurl} />}\r\n                                onClick={()=>this.showModal(item)}\r\n                            >\r\n                                {item.name}\r\n                            </Card>\r\n                            \r\n                            <Modal\r\n                                visible={this.state.visible}\r\n                                title=\"Character's Information\"\r\n                                onOk={this.handleOk}\r\n                                onCancel={this.handleCancel}\r\n                                footer={[\r\n                                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                                    Back\r\n                                    </Button>,\r\n                                    <Button key=\"submit\" type=\"primary\" onClick={()=>this.auctionstatus(item)}>\r\n                                    Auction Status\r\n                                    </Button>,\r\n                                    <Button key=\"submit\" type=\"primary\" onClick={()=>this.sell(item)}>\r\n                                    Sell\r\n                                    </Button>,\r\n                                ]}\r\n                                width={window.innerWidth*0.5}\r\n                                >\r\n                                 <Row>\r\n                                    <Col span={8}>\r\n                                        <Image\r\n                                            width={200}\r\n                                            height={250}\r\n                                            src={this.state.data[this.state.choosedmodelid].imgurl}\r\n                                            \r\n                                        />\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                    <Descriptions layout=\"vertical\" bordered size={\"small\"}>\r\n                                        <Descriptions.Item label=\"Name\" span={2}>{this.state.data[this.state.choosedmodelid].name}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"State\" span={2}><States e={this.state.data[this.state.choosedmodelid]}/></Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Owner History\">\r\n                                            <List dataSource={this.state.ownerhistory}\r\n                                                renderItem={item2 => (\r\n                                                    <div>{item2.hi}</div>\r\n                                                )}\r\n                                            />\r\n                                                \r\n                                        </Descriptions.Item>\r\n                                    </Descriptions>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                    \r\n                            </Modal>\r\n                            <Modal\r\n                                visible={this.state.visible2}\r\n                                title={\"Create Auction\"}\r\n                                onCancel={this.handleCancel2}\r\n                                footer={[\r\n                                ]}\r\n                                width={window.innerWidth*0.3}\r\n                                >\r\n                            <div id=\"body\" className=\"login-formown\">\r\n                            \r\n                            <Form onFinish={this.createauction} style={{textAlign:'center'}}>\r\n                                \r\n                                <Form.Item label={<div>Starting Price<svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"20\" height=\"20\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg></div>}  name=\"startingsrice\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the Starting Price' }\r\n                                    ]\r\n                                }>\r\n                                    \r\n                                    \r\n                                    <InputNumber min={0.01} max={59}value={this.state.startprice} onChange={this.changestartprice} />\r\n                                    \r\n                                </Form.Item>\r\n                                <Form.Item label=\"Auction Duration(days):\" name=\"auctiondurtionday\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the auction duration days' },\r\n\r\n                                    ]\r\n                                }>\r\n                                    <InputNumber min={0} max={23} value={this.state.auctiondurationday} onChange={this.changeauctiondurationday} />\r\n                                    \r\n                                </Form.Item >\r\n                                <Form.Item label=\"Auction Duration(hours):\" name=\"auctiondurtionhour\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the auction duration hours' },\r\n\r\n                                    ]\r\n                                }>\r\n                                    \r\n                                    <InputNumber min={0} max={29} value={this.state.auctiondurationhour} onChange={this.changeauctiondurationhour} />\r\n                                    \r\n                                </Form.Item >\r\n                                <Form.Item label=\"Auction Duration(minutes):\" name=\"auctiondurtionminute\" rules={\r\n                                    [\r\n                                        { required: true, message: 'Please input the auction duration minutes' },\r\n\r\n                                    ]\r\n                                }>\r\n                                    \r\n                                    <InputNumber min={1-this.state.auctiondurationday-this.state.auctiondurationhour} value={this.state.auctiondurationminute} onChange={this.changeauctiondurationminute} />\r\n                                </Form.Item >\r\n                                <Form.Item>\r\n                                    <Button ghost  htmlType=\"submit\" type=\"primary\" shape=\"round\" size='large'>\r\n                                        Create!\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            </div>\r\n                            </Modal>\r\n                            <Modal\r\n                                visible={this.state.visible3}\r\n                                title={\"Auction status\"}\r\n                                onCancel={this.handleCancel3}\r\n                                footer={[\r\n                                    <Button key=\"back\" onClick={this.handleCancel3}>\r\n                                    Back\r\n                                    </Button>,\r\n                                    <Button key=\"submit\" type=\"primary\" onClick={()=>this.confirm(item)}>\r\n                                    Confirm\r\n                                    </Button>,\r\n                                ]}\r\n                                width={window.innerWidth*0.3}\r\n                                >\r\n                            <Descriptions layout=\"vertical\" bordered size={\"small\"}>\r\n                                        <Descriptions.Item label=\"Name\" span={1.5}>{this.state.data[this.state.choosedmodelid].name}</Descriptions.Item>\r\n                                        \r\n                                        <Descriptions.Item label=\"Level\" span={1.5}>{this.state.data[this.state.choosedmodelid].level}</Descriptions.Item>\r\n                                        <Descriptions.Item label=\"State\" span={1.5}><States e={this.state.data[this.state.choosedmodelid]}/></Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Start Price\" span={1.5}>\r\n                                          <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                          {this.state.data[this.state.choosedmodelid].startprice}\r\n                                        </Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Current Price\" span={1.5}>\r\n                                          <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\"></path></svg>\r\n                                          {this.state.maxprice}\r\n                                        </Descriptions.Item>\r\n                                        <Descriptions.Item label=\"Bidder History\">\r\n                                            <List dataSource={this.state.bidderhistory}\r\n                                                renderItem={item2 => (\r\n                                                    <div>\r\n                                                        {item2.buyer}:\r\n                                                        <svg t=\"1634640039778\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2518\" width=\"16\" height=\"16\"><path d=\"M509.610667 766.72L195.413333 581.12 509.568 1024l314.453333-442.88-314.538666 185.6h0.128zM514.389333 0L200.106667 521.514667l314.24 185.770666 314.24-185.6L514.389333 0z\" p-id=\"2519\">  </path></svg>\r\n                                                        {item2.price}\r\n                                                    </div>\r\n                                                )}\r\n                                            />\r\n                                                \r\n                                        </Descriptions.Item>\r\n                            </Descriptions>\r\n                            </Modal>\r\n                        </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\LoginInterface.jsx",["155","156","157","158","159","160","161"],"import React, { Component } from 'react';\r\nimport CardExampleCard from './ui'\r\nimport {Card, Button,Layout} from 'antd'\r\nimport Background from './123.jpeg';\r\nimport {Link} from 'react-router-dom'\r\nimport { Color } from '@antv/attr';\r\nimport { toInteger } from '@antv/util';\r\nconst {Meta} = Card\r\nlet web3 = require('./web3');\r\nlet lotteryInstance = require('./eth')\r\nconst {Content } = Layout\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    play = async () => {\r\n        //1.调用合约方法\r\n        //2.转钱1ETH\r\n        this.setState({ isClicked: true })\r\n        let accounts = await web3.eth.getAccounts()\r\n        try {\r\n            await lotteryInstance.methods.play().send({\r\n                from: accounts[0],\r\n                value: web3.utils.toWei('0.1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            window.location.reload()\r\n            this.setState({ isClicked: false })\r\n            alert('投注成功')\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ isClicked: false })\r\n            alert('投注失败')\r\n        }\r\n    }\r\n    draw = async () => {\r\n        //1.调用合约方法\r\n        //2.转钱1ETH\r\n        this.setState({ isClicked: true })\r\n        let accounts = await web3.eth.getAccounts()\r\n        try {\r\n            await lotteryInstance.methods.draw().send({\r\n                from: accounts[0],\r\n                // value: web3.utils.toWei('1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            //显示中奖人\r\n            let winner = await lotteryInstance.methods.winner().call()\r\n            window.location.reload()\r\n            this.setState({ isClicked: false })\r\n            alert(`开奖成功!\\n中奖人: ${winner}`)\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ isClicked: false })\r\n            alert('开奖失败')\r\n        }\r\n    }\r\n    refund = async () => {\r\n        console.log('tuijiang Button click')\r\n        //1.调用合约方法\r\n        //2.转钱1ETH\r\n        this.setState({ isClicked: true })\r\n        let accounts = await web3.eth.getAccounts()\r\n        try {\r\n            await lotteryInstance.methods.refund().send({\r\n                from: accounts[0],\r\n                // value: web3.utils.toWei('1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            window.location.reload()\r\n            this.setState({ isClicked: false })\r\n            alert('退奖成功')\r\n        } catch (e) {\r\n            this.setState({ isClicked: false })\r\n            alert('退奖失败')\r\n        }\r\n    }\r\n    oc = () =>{\r\n        console.log(\"click\")\r\n    }\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            disabled:true,\r\n            manager: '',\r\n            round: '',\r\n            winner: '',\r\n            playerCounts: 0,\r\n            balance: 0,\r\n            players: [],\r\n            currentAccount: '',\r\n            isClicked: false,\r\n            isShowButton: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    async componentWillMount() {\r\n        \r\n        // //获取当前的所有地址\r\n        let accounts = await web3.eth.getAccounts()\r\n        if(accounts.length!=0){\r\n            console.log(accounts.length)\r\n            this.state.disabled=false;\r\n        }\r\n\r\n        // let manager = await lotteryInstance.methods.manager().call()\r\n        // console.log(12)\r\n        // let winner = await lotteryInstance.methods.winner().call()\r\n        // let round = await lotteryInstance.methods.round().call()\r\n        // let playerCounts = await lotteryInstance.methods.getPlayersCount().call()\r\n        // //单位是wei，需要转换为eth单位\r\n        // let balanceWei = await lotteryInstance.methods.getBalance().call()\r\n        // //从wei单位转换为eth\r\n        // let balance = web3.utils.fromWei(balanceWei, 'ether')\r\n        // let players = await lotteryInstance.methods.getPlayers().call()\r\n        // //是否显示管理员按钮\r\n        // let isShowButton = accounts[0] === manager ? 'inline' : 'none'\r\n        // console.log(playerCounts)\r\n        // this.setState({\r\n        //     // manager: manager,\r\n        //     manager,\r\n        //     round,\r\n        //     winner,\r\n        //     playerCounts,\r\n        //     balance,\r\n        //     players,\r\n        //     currentAccount: accounts[0],\r\n        //     isClicked: false,\r\n        //     isShowButton\r\n        // })\r\n        this.setState({\r\n            \r\n        })\r\n        // console.log(aasa);\r\n    }\r\n\r\n    helpFunction = () => {\r\n        let manager = this.state.manager.toLowerCase()\r\n        window.ethereum.on('accountsChanged', (accounts) => {\r\n            if (accounts[0]) {\r\n                let isShowButton = accounts[0].toLowerCase() === manager ? 'inline' : 'none'\r\n                this.setState({ currentAccount: accounts[0], isShowButton: isShowButton })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this.helpFunction()\r\n        return (\r\n            \r\n            <div className=\"login2\">\r\n                <div className=\"login-content-wrap\"><br/><br/><h1 style={{textAlign:\"center\"}} >Welcome to FastCharacter</h1></div>\r\n                    <div style={{textAlign:\"center\"}}>\r\n                    <Button disabled={this.state.disabled} className=\"login-form-button\" type=\"primary\" onClick={this.oc} size=\"large\" ghost shape=\"round\"  style={{marginTop:window.innerHeight*0.3}}>\r\n                    <Link to={{pathname:\"/List\"}}>Get start Now!</Link>\r\n                    </Button>\r\n                    </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\Help.jsx",["162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, { Component } from 'react';\r\nimport CardExampleCard from './ui'\r\nimport {Card, Button,Layout,Col,Row , List} from 'antd'\r\nimport {FormOutlined, DollarCircleOutlined, SketchOutlined,QuestionCircleOutlined ,LeftOutlined} from '@ant-design/icons'\r\nimport Background from './123.jpeg';\r\nimport {Link} from 'react-router-dom'\r\nimport { Color } from '@antv/attr';\r\nimport { toInteger } from '@antv/util';\r\nconst {Meta} = Card\r\nlet web3 = require('./web3');\r\nlet lotteryInstance = require('./eth')\r\nconst {Content } = Layout\r\n\r\nconst data = [\r\n    {\r\n      title: 'Title 1',\r\n    },\r\n    {\r\n      title: 'Title 2',\r\n    },\r\n    {\r\n      title: 'Title 3',\r\n    },\r\n    {\r\n      title: 'Title 4',\r\n    },\r\n    {\r\n      title: 'Title 5',\r\n    },\r\n    {\r\n      title: 'Title 6',\r\n    },\r\n  ];\r\n  for (let i = 0; i < 23; i++) {\r\n    data.push({\r\n        \r\n        title: 'Title'+i,\r\n        \r\n      });\r\n  }\r\nclass App extends Component {\r\n\r\n    play = async () => {\r\n        console.log('play Button click')\r\n        //1.调用合约方法\r\n        //2.转钱1ETH\r\n        this.setState({ isClicked: true })\r\n        let accounts = await web3.eth.getAccounts()\r\n        try {\r\n            await lotteryInstance.methods.play().send({\r\n                from: accounts[0],\r\n                value: web3.utils.toWei('0.1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            window.location.reload()\r\n            this.setState({ isClicked: false })\r\n            alert('投注成功')\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ isClicked: false })\r\n            alert('投注失败')\r\n        }\r\n    }\r\n    draw = async () => {\r\n        console.log('kaijiang Button click')\r\n        //1.调用合约方法\r\n        //2.转钱1ETH\r\n        this.setState({ isClicked: true })\r\n        let accounts = await web3.eth.getAccounts()\r\n        try {\r\n            await lotteryInstance.methods.draw().send({\r\n                from: accounts[0],\r\n                // value: web3.utils.toWei('1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            //显示中奖人\r\n            let winner = await lotteryInstance.methods.winner().call()\r\n            window.location.reload()\r\n            this.setState({ isClicked: false })\r\n            alert(`开奖成功!\\n中奖人: ${winner}`)\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ isClicked: false })\r\n            alert('开奖失败')\r\n        }\r\n    }\r\n    refund = async () => {\r\n        console.log('tuijiang Button click')\r\n        //1.调用合约方法\r\n        //2.转钱1ETH\r\n        this.setState({ isClicked: true })\r\n        let accounts = await web3.eth.getAccounts()\r\n        try {\r\n            await lotteryInstance.methods.refund().send({\r\n                from: accounts[0],\r\n                // value: web3.utils.toWei('1', 'ether'),\r\n                gas: '3000000',\r\n            })\r\n            window.location.reload()\r\n            this.setState({ isClicked: false })\r\n            alert('退奖成功')\r\n        } catch (e) {\r\n            console.log(e)\r\n            this.setState({ isClicked: false })\r\n            alert('退奖失败')\r\n        }\r\n    }\r\n    oc = () =>{\r\n        console.log(\"click\")\r\n    }\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            disabled:true,\r\n            manager: '',\r\n            round: '',\r\n            winner: '',\r\n            playerCounts: 0,\r\n            balance: 0,\r\n            players: [],\r\n            currentAccount: '',\r\n            isClicked: false,\r\n            isShowButton: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    async componentWillMount() {\r\n        \r\n        //获取当前的所有地址\r\n        let accounts = await web3.eth.getAccounts()\r\n\r\n        if(accounts.length!=0){\r\n            console.log(accounts.length)\r\n            this.state.disabled=false;\r\n        }\r\n        // let manager = await lotteryInstance.methods.manager().call()\r\n        // console.log(12)\r\n        // let winner = await lotteryInstance.methods.winner().call()\r\n        // let round = await lotteryInstance.methods.round().call()\r\n        // let playerCounts = await lotteryInstance.methods.getPlayersCount().call()\r\n        // //单位是wei，需要转换为eth单位\r\n        // let balanceWei = await lotteryInstance.methods.getBalance().call()\r\n        // //从wei单位转换为eth\r\n        // let balance = web3.utils.fromWei(balanceWei, 'ether')\r\n        // let players = await lotteryInstance.methods.getPlayers().call()\r\n        // //是否显示管理员按钮\r\n        // let isShowButton = accounts[0] === manager ? 'inline' : 'none'\r\n        // console.log(playerCounts)\r\n        // this.setState({\r\n        //     // manager: manager,\r\n        //     manager,\r\n        //     round,\r\n        //     winner,\r\n        //     playerCounts,\r\n        //     balance,\r\n        //     players,\r\n        //     currentAccount: accounts[0],\r\n        //     isClicked: false,\r\n        //     isShowButton\r\n        // })\r\n    }\r\n\r\n    helpFunction = () => {\r\n        let manager = this.state.manager.toLowerCase()\r\n        window.ethereum.on('accountsChanged', (accounts) => {\r\n            if (accounts[0]) {\r\n                let isShowButton = accounts[0].toLowerCase() === manager ? 'inline' : 'none'\r\n                this.setState({ currentAccount: accounts[0], isShowButton: isShowButton })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this.helpFunction()\r\n        return (\r\n            \r\n            <div className=\"login2\">\r\n                \r\n                <div className=\"login-content-wrap2\">\r\n                    <br/><br/><h1 style={{textAlign:\"center\"}} >What is NFT Characters?</h1>\r\n                    \r\n                </div>\r\n                <div className=\"login-content-wrap3\" style={{}}>\r\n                    \r\n                    <Button style={{marginLeft: 20, marginTop:10}} shape=\"round\" ghost type=\"primary\">\r\n                        <Link to={{pathname:\"/List\"}}>\r\n                            <LeftOutlined />Back\r\n                        </Link>    \r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"login-content-wraphelp\">\r\n                    <br/>\r\n                    <h2>\r\n                    NFT, fully known as non fungible token, refers to non homogenous token, which is the only cryptocurrency token used to represent digital assets (including JPG and video clip forms). NFT can be bought and sold, just like tangible assets.\r\n                    </h2>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\web3.js",[],"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\eth.js",[],"E:\\大三上\\区块链\\大作业\\NFT-Characters-Auction-main\\NFT-Characters-Auction-main\\frontend\\src\\pages\\Login\\ui.jsx",["176"],"import React from 'react'\r\nimport {Button, Card, Icon, Image, Statistic } from 'semantic-ui-react'\r\n\r\nconst CardExampleCard = (props) => (\r\n    <Card>\r\n        <Card.Content>\r\n            <Card.Header>彩票Demo</Card.Header>\r\n            <Card.Meta>\r\n                <p style={{ wordBreak: 'break-word' }}>管理员地址: {props.manager}</p>\r\n                <p style={{ wordBreak: 'break-word' }}>当前地址: {props.currentAccount}</p>\r\n                <p style={{ wordBreak: 'break-word' }}>上期中奖者:{props.winner}</p>\r\n            </Card.Meta>\r\n            <Card.Description>每晚8点准时开奖！！</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n            <Button>\r\n                <Icon name='user' />\r\n                {props.playerCounts} 人参与\r\n            </Button>\r\n        </Card.Content>\r\n\r\n        <Card.Content extra>\r\n            <Statistic color='red'>\r\n                <Statistic.Value>{props.balance}ETH</Statistic.Value>\r\n                <Statistic.Label>奖金池</Statistic.Label>\r\n            </Statistic>\r\n        </Card.Content>\r\n\r\n        <Card.Content extra>\r\n            <Statistic color='blue'>\r\n                <Statistic.Value>第{props.round}期</Statistic.Value>\r\n                <a href='https://ropsten.etherscan.io/address/0x66F06D938F90b8cc1604F6f2C4b4520cBDD23DCf'>点击我查看交易历史</a>\r\n            </Statistic>\r\n        </Card.Content>\r\n\r\n        <Button animated='fade' color='orange' onClick={props.play} disabled={props.isClicked}>\r\n            <Button.Content visible>投注产生希望</Button.Content>\r\n            <Button.Content hidden>购买放飞梦想</Button.Content>\r\n        </Button>\r\n\r\n        <Button inverted color='red' style={{ display: props.isShowButton }} onClick={props.draw}\r\n            disabled={props.isClicked}>\r\n            开奖\r\n        </Button>\r\n        <Button inverted color='orange' style={{ display: props.isShowButton }} onClick={props.refund}\r\n            disabled={props.isClicked}>\r\n            退奖\r\n        </Button>\r\n    </Card >\r\n)\r\n\r\nexport default CardExampleCard",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":12},{"ruleId":"181","severity":1,"message":"185","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":30},{"ruleId":"186","severity":1,"message":"187","line":5,"column":5,"nodeType":"188","messageId":"189","endLine":7,"endColumn":6},{"ruleId":"190","severity":1,"message":"191","line":87,"column":25,"nodeType":"192","endLine":87,"endColumn":74},{"ruleId":"181","severity":1,"message":"193","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"194","line":3,"column":29,"nodeType":"183","messageId":"184","endLine":3,"endColumn":32},{"ruleId":"181","severity":1,"message":"195","line":3,"column":33,"nodeType":"183","messageId":"184","endLine":3,"endColumn":36},{"ruleId":"181","severity":1,"message":"196","line":3,"column":49,"nodeType":"183","messageId":"184","endLine":3,"endColumn":57},{"ruleId":"181","severity":1,"message":"182","line":3,"column":59,"nodeType":"183","messageId":"184","endLine":3,"endColumn":63},{"ruleId":"181","severity":1,"message":"197","line":3,"column":70,"nodeType":"183","messageId":"184","endLine":3,"endColumn":76},{"ruleId":"181","severity":1,"message":"198","line":3,"column":77,"nodeType":"183","messageId":"184","endLine":3,"endColumn":88},{"ruleId":"181","severity":1,"message":"199","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":21},{"ruleId":"181","severity":1,"message":"200","line":4,"column":23,"nodeType":"183","messageId":"184","endLine":4,"endColumn":43},{"ruleId":"181","severity":1,"message":"201","line":4,"column":45,"nodeType":"183","messageId":"184","endLine":4,"endColumn":59},{"ruleId":"181","severity":1,"message":"202","line":4,"column":60,"nodeType":"183","messageId":"184","endLine":4,"endColumn":82},{"ruleId":"181","severity":1,"message":"203","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":15},{"ruleId":"181","severity":1,"message":"205","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":12},{"ruleId":"181","severity":1,"message":"206","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":61,"column":27,"nodeType":"209","messageId":"210","endLine":61,"endColumn":29},{"ruleId":"181","severity":1,"message":"193","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"211","line":3,"column":69,"nodeType":"183","messageId":"184","endLine":3,"endColumn":74},{"ruleId":"181","severity":1,"message":"212","line":3,"column":84,"nodeType":"183","messageId":"184","endLine":3,"endColumn":89},{"ruleId":"181","severity":1,"message":"199","line":4,"column":22,"nodeType":"183","messageId":"184","endLine":4,"endColumn":34},{"ruleId":"181","severity":1,"message":"200","line":4,"column":36,"nodeType":"183","messageId":"184","endLine":4,"endColumn":56},{"ruleId":"181","severity":1,"message":"201","line":4,"column":58,"nodeType":"183","messageId":"184","endLine":4,"endColumn":72},{"ruleId":"181","severity":1,"message":"202","line":4,"column":73,"nodeType":"183","messageId":"184","endLine":4,"endColumn":95},{"ruleId":"181","severity":1,"message":"203","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":15},{"ruleId":"181","severity":1,"message":"213","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":18},{"ruleId":"181","severity":1,"message":"205","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":12},{"ruleId":"181","severity":1,"message":"206","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":21,"column":24,"nodeType":"209","messageId":"210","endLine":21,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":58,"column":27,"nodeType":"209","messageId":"210","endLine":58,"endColumn":29},{"ruleId":"207","severity":1,"message":"214","line":102,"column":25,"nodeType":"209","messageId":"210","endLine":102,"endColumn":27},{"ruleId":"207","severity":1,"message":"214","line":109,"column":13,"nodeType":"209","messageId":"210","endLine":109,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":119,"column":34,"nodeType":"209","messageId":"210","endLine":119,"endColumn":36},{"ruleId":"207","severity":1,"message":"214","line":154,"column":61,"nodeType":"209","messageId":"210","endLine":154,"endColumn":63},{"ruleId":"207","severity":1,"message":"214","line":154,"column":121,"nodeType":"209","messageId":"210","endLine":154,"endColumn":123},{"ruleId":"207","severity":1,"message":"214","line":176,"column":63,"nodeType":"209","messageId":"210","endLine":176,"endColumn":65},{"ruleId":"207","severity":1,"message":"208","line":193,"column":27,"nodeType":"209","messageId":"210","endLine":193,"endColumn":29},{"ruleId":"181","severity":1,"message":"193","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"215","line":3,"column":22,"nodeType":"183","messageId":"184","endLine":3,"endColumn":28},{"ruleId":"181","severity":1,"message":"202","line":4,"column":60,"nodeType":"183","messageId":"184","endLine":4,"endColumn":82},{"ruleId":"181","severity":1,"message":"203","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":15},{"ruleId":"181","severity":1,"message":"205","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":12},{"ruleId":"207","severity":1,"message":"214","line":19,"column":22,"nodeType":"209","messageId":"210","endLine":19,"endColumn":24},{"ruleId":"181","severity":1,"message":"216","line":55,"column":9,"nodeType":"183","messageId":"184","endLine":55,"endColumn":17},{"ruleId":"181","severity":1,"message":"217","line":57,"column":9,"nodeType":"183","messageId":"184","endLine":57,"endColumn":16},{"ruleId":"207","severity":1,"message":"214","line":97,"column":21,"nodeType":"209","messageId":"210","endLine":97,"endColumn":23},{"ruleId":"207","severity":1,"message":"214","line":104,"column":9,"nodeType":"209","messageId":"210","endLine":104,"endColumn":11},{"ruleId":"207","severity":1,"message":"214","line":114,"column":30,"nodeType":"209","messageId":"210","endLine":114,"endColumn":32},{"ruleId":"207","severity":1,"message":"214","line":152,"column":129,"nodeType":"209","messageId":"210","endLine":152,"endColumn":131},{"ruleId":"207","severity":1,"message":"208","line":168,"column":23,"nodeType":"209","messageId":"210","endLine":168,"endColumn":25},{"ruleId":"181","severity":1,"message":"193","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"211","line":3,"column":69,"nodeType":"183","messageId":"184","endLine":3,"endColumn":74},{"ruleId":"181","severity":1,"message":"212","line":3,"column":84,"nodeType":"183","messageId":"184","endLine":3,"endColumn":89},{"ruleId":"181","severity":1,"message":"199","line":4,"column":22,"nodeType":"183","messageId":"184","endLine":4,"endColumn":34},{"ruleId":"181","severity":1,"message":"200","line":4,"column":36,"nodeType":"183","messageId":"184","endLine":4,"endColumn":56},{"ruleId":"181","severity":1,"message":"201","line":4,"column":58,"nodeType":"183","messageId":"184","endLine":4,"endColumn":72},{"ruleId":"181","severity":1,"message":"202","line":4,"column":73,"nodeType":"183","messageId":"184","endLine":4,"endColumn":95},{"ruleId":"181","severity":1,"message":"203","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":15},{"ruleId":"181","severity":1,"message":"213","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":18},{"ruleId":"181","severity":1,"message":"218","line":9,"column":10,"nodeType":"183","messageId":"184","endLine":9,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":12},{"ruleId":"181","severity":1,"message":"206","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":15},{"ruleId":"207","severity":1,"message":"214","line":21,"column":24,"nodeType":"209","messageId":"210","endLine":21,"endColumn":26},{"ruleId":"207","severity":1,"message":"208","line":57,"column":27,"nodeType":"209","messageId":"210","endLine":57,"endColumn":29},{"ruleId":"219","severity":1,"message":"220","line":98,"column":9,"nodeType":"221","endLine":98,"endColumn":19},{"ruleId":"207","severity":1,"message":"214","line":109,"column":34,"nodeType":"209","messageId":"210","endLine":109,"endColumn":36},{"ruleId":"207","severity":1,"message":"214","line":122,"column":20,"nodeType":"209","messageId":"210","endLine":122,"endColumn":22},{"ruleId":"207","severity":1,"message":"214","line":122,"column":38,"nodeType":"209","messageId":"210","endLine":122,"endColumn":40},{"ruleId":"207","severity":1,"message":"214","line":130,"column":61,"nodeType":"209","messageId":"210","endLine":130,"endColumn":63},{"ruleId":"207","severity":1,"message":"214","line":130,"column":120,"nodeType":"209","messageId":"210","endLine":130,"endColumn":122},{"ruleId":"219","severity":1,"message":"220","line":132,"column":13,"nodeType":"221","endLine":132,"endColumn":23},{"ruleId":"207","severity":1,"message":"214","line":153,"column":61,"nodeType":"209","messageId":"210","endLine":153,"endColumn":63},{"ruleId":"207","severity":1,"message":"214","line":153,"column":121,"nodeType":"209","messageId":"210","endLine":153,"endColumn":123},{"ruleId":"207","severity":1,"message":"214","line":154,"column":79,"nodeType":"209","messageId":"210","endLine":154,"endColumn":81},{"ruleId":"181","severity":1,"message":"193","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"203","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":15},{"ruleId":"181","severity":1,"message":"218","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":12},{"ruleId":"181","severity":1,"message":"206","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":106,"column":27,"nodeType":"209","messageId":"210","endLine":106,"endColumn":29},{"ruleId":"181","severity":1,"message":"193","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":23},{"ruleId":"181","severity":1,"message":"194","line":3,"column":29,"nodeType":"183","messageId":"184","endLine":3,"endColumn":32},{"ruleId":"181","severity":1,"message":"195","line":3,"column":33,"nodeType":"183","messageId":"184","endLine":3,"endColumn":36},{"ruleId":"181","severity":1,"message":"182","line":3,"column":39,"nodeType":"183","messageId":"184","endLine":3,"endColumn":43},{"ruleId":"181","severity":1,"message":"199","line":4,"column":9,"nodeType":"183","messageId":"184","endLine":4,"endColumn":21},{"ruleId":"181","severity":1,"message":"200","line":4,"column":23,"nodeType":"183","messageId":"184","endLine":4,"endColumn":43},{"ruleId":"181","severity":1,"message":"201","line":4,"column":45,"nodeType":"183","messageId":"184","endLine":4,"endColumn":59},{"ruleId":"181","severity":1,"message":"202","line":4,"column":60,"nodeType":"183","messageId":"184","endLine":4,"endColumn":82},{"ruleId":"181","severity":1,"message":"203","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":15},{"ruleId":"181","severity":1,"message":"218","line":8,"column":10,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"205","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":12},{"ruleId":"181","severity":1,"message":"206","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":15},{"ruleId":"207","severity":1,"message":"208","line":135,"column":27,"nodeType":"209","messageId":"210","endLine":135,"endColumn":29},{"ruleId":"181","severity":1,"message":"222","line":2,"column":29,"nodeType":"183","messageId":"184","endLine":2,"endColumn":34},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardExampleCard' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Checkbox' is defined but never used.","'Slider' is defined but never used.","'InputNumber' is defined but never used.","'FormOutlined' is defined but never used.","'DollarCircleOutlined' is defined but never used.","'SketchOutlined' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'Background' is defined but never used.","'Color' is defined but never used.","'Meta' is assigned a value but never used.","'Content' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Badge' is defined but never used.","'Input' is defined but never used.","'ListItem' is defined but never used.","Expected '===' and instead saw '=='.","'Layout' is defined but never used.","'accounts' is assigned a value but never used.","'result2' is assigned a value but never used.","'toInteger' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]