{"ast":null,"code":"// import React, { Component } from 'react';\n// import CardExampleCard from './ui'\n// import {Card, Button,Layout} from 'antd'\n// import Background from './123.jpeg';\n// import {Link} from 'react-router-dom'\n// import { Color } from '@antv/attr';\n// import { toInteger } from '@antv/util';\n// const {Meta} = Card\n// let web3 = require('./web3');\n// let lotteryInstance = require('./eth')\n// const {Content } = Layout\n// class App extends Component {\n//     play = async () => {\n//         //1.调用合约方法\n//         //2.转钱1ETH\n//         this.setState({ isClicked: true })\n//         let accounts = await web3.eth.getAccounts()\n//         try {\n//             await lotteryInstance.methods.play().send({\n//                 from: accounts[0],\n//                 value: web3.utils.toWei('0.1', 'ether'),\n//                 gas: '3000000',\n//             })\n//             window.location.reload()\n//             this.setState({ isClicked: false })\n//             alert('投注成功')\n//         } catch (e) {\n//             console.log(e)\n//             this.setState({ isClicked: false })\n//             alert('投注失败')\n//         }\n//     }\n//     draw = async () => {\n//         //1.调用合约方法\n//         //2.转钱1ETH\n//         this.setState({ isClicked: true })\n//         let accounts = await web3.eth.getAccounts()\n//         try {\n//             await lotteryInstance.methods.draw().send({\n//                 from: accounts[0],\n//                 // value: web3.utils.toWei('1', 'ether'),\n//                 gas: '3000000',\n//             })\n//             //显示中奖人\n//             let winner = await lotteryInstance.methods.winner().call()\n//             window.location.reload()\n//             this.setState({ isClicked: false })\n//             alert(`开奖成功!\\n中奖人: ${winner}`)\n//         } catch (e) {\n//             console.log(e)\n//             this.setState({ isClicked: false })\n//             alert('开奖失败')\n//         }\n//     }\n//     refund = async () => {\n//         console.log('tuijiang Button click')\n//         //1.调用合约方法\n//         //2.转钱1ETH\n//         this.setState({ isClicked: true })\n//         let accounts = await web3.eth.getAccounts()\n//         try {\n//             await lotteryInstance.methods.refund().send({\n//                 from: accounts[0],\n//                 // value: web3.utils.toWei('1', 'ether'),\n//                 gas: '3000000',\n//             })\n//             window.location.reload()\n//             this.setState({ isClicked: false })\n//             alert('退奖成功')\n//         } catch (e) {\n//             this.setState({ isClicked: false })\n//             alert('退奖失败')\n//         }\n//     }\n//     oc = () =>{\n//         console.log(\"click\")\n//     }\n//     constructor() {\n//         super()\n//         this.state = {\n//             disabled:true,\n//             manager: '',\n//             round: '',\n//             winner: '',\n//             playerCounts: 0,\n//             balance: 0,\n//             players: [],\n//             currentAccount: '',\n//             isClicked: false,\n//             isShowButton: '',\n//         }\n//     }\n//     componentDidMount() {\n//     }\n//     async componentWillMount() {\n//         // //获取当前的所有地址\n//         let accounts = await web3.eth.getAccounts()\n//         if(accounts.length!=0){\n//             console.log(accounts.length)\n//             this.state.disabled=false;\n//         }\n//         // let manager = await lotteryInstance.methods.manager().call()\n//         // console.log(12)\n//         // let winner = await lotteryInstance.methods.winner().call()\n//         // let round = await lotteryInstance.methods.round().call()\n//         // let playerCounts = await lotteryInstance.methods.getPlayersCount().call()\n//         // //单位是wei，需要转换为eth单位\n//         // let balanceWei = await lotteryInstance.methods.getBalance().call()\n//         // //从wei单位转换为eth\n//         // let balance = web3.utils.fromWei(balanceWei, 'ether')\n//         // let players = await lotteryInstance.methods.getPlayers().call()\n//         // //是否显示管理员按钮\n//         // let isShowButton = accounts[0] === manager ? 'inline' : 'none'\n//         // console.log(playerCounts)\n//         // this.setState({\n//         //     // manager: manager,\n//         //     manager,\n//         //     round,\n//         //     winner,\n//         //     playerCounts,\n//         //     balance,\n//         //     players,\n//         //     currentAccount: accounts[0],\n//         //     isClicked: false,\n//         //     isShowButton\n//         // })\n//         this.setState({\n//         })\n//         // console.log(aasa);\n//     }\n//     helpFunction = () => {\n//         let manager = this.state.manager.toLowerCase()\n//         window.ethereum.on('accountsChanged', (accounts) => {\n//             if (accounts[0]) {\n//                 let isShowButton = accounts[0].toLowerCase() === manager ? 'inline' : 'none'\n//                 this.setState({ currentAccount: accounts[0], isShowButton: isShowButton })\n//             }\n//         })\n//     }\n//     render() {\n//         // this.helpFunction()\n//         return (\n//             <div className=\"login2\">\n//                 <div className=\"login-content-wrap\"><br/><br/><h1 style={{textAlign:\"center\"}} >Welcome to FastCharacter</h1></div>\n//                     <div style={{textAlign:\"center\"}}>\n//                     <Button disabled={this.state.disabled} className=\"login-form-button\" type=\"primary\" onClick={this.oc} size=\"large\" ghost shape=\"round\"  style={{marginTop:window.innerHeight*0.3}}>\n//                     <Link to={{pathname:\"/List\"}}>Get start Now!</Link>\n//                     </Button>\n//                     </div>\n//             </div>\n//         );\n//     }\n// }\n// export default App;","map":{"version":3,"sources":["E:/大三上/区块链/大作业/NFT-Characters-Auction-main/NFT-Characters-Auction-main/frontend/src/pages/Login/LoginInterface.jsx"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\r\n// import CardExampleCard from './ui'\r\n// import {Card, Button,Layout} from 'antd'\r\n// import Background from './123.jpeg';\r\n// import {Link} from 'react-router-dom'\r\n// import { Color } from '@antv/attr';\r\n// import { toInteger } from '@antv/util';\r\n// const {Meta} = Card\r\n// let web3 = require('./web3');\r\n// let lotteryInstance = require('./eth')\r\n// const {Content } = Layout\r\n\r\n\r\n\r\n// class App extends Component {\r\n\r\n//     play = async () => {\r\n//         //1.调用合约方法\r\n//         //2.转钱1ETH\r\n//         this.setState({ isClicked: true })\r\n//         let accounts = await web3.eth.getAccounts()\r\n//         try {\r\n//             await lotteryInstance.methods.play().send({\r\n//                 from: accounts[0],\r\n//                 value: web3.utils.toWei('0.1', 'ether'),\r\n//                 gas: '3000000',\r\n//             })\r\n//             window.location.reload()\r\n//             this.setState({ isClicked: false })\r\n//             alert('投注成功')\r\n//         } catch (e) {\r\n//             console.log(e)\r\n//             this.setState({ isClicked: false })\r\n//             alert('投注失败')\r\n//         }\r\n//     }\r\n//     draw = async () => {\r\n//         //1.调用合约方法\r\n//         //2.转钱1ETH\r\n//         this.setState({ isClicked: true })\r\n//         let accounts = await web3.eth.getAccounts()\r\n//         try {\r\n//             await lotteryInstance.methods.draw().send({\r\n//                 from: accounts[0],\r\n//                 // value: web3.utils.toWei('1', 'ether'),\r\n//                 gas: '3000000',\r\n//             })\r\n//             //显示中奖人\r\n//             let winner = await lotteryInstance.methods.winner().call()\r\n//             window.location.reload()\r\n//             this.setState({ isClicked: false })\r\n//             alert(`开奖成功!\\n中奖人: ${winner}`)\r\n//         } catch (e) {\r\n//             console.log(e)\r\n//             this.setState({ isClicked: false })\r\n//             alert('开奖失败')\r\n//         }\r\n//     }\r\n//     refund = async () => {\r\n//         console.log('tuijiang Button click')\r\n//         //1.调用合约方法\r\n//         //2.转钱1ETH\r\n//         this.setState({ isClicked: true })\r\n//         let accounts = await web3.eth.getAccounts()\r\n//         try {\r\n//             await lotteryInstance.methods.refund().send({\r\n//                 from: accounts[0],\r\n//                 // value: web3.utils.toWei('1', 'ether'),\r\n//                 gas: '3000000',\r\n//             })\r\n//             window.location.reload()\r\n//             this.setState({ isClicked: false })\r\n//             alert('退奖成功')\r\n//         } catch (e) {\r\n//             this.setState({ isClicked: false })\r\n//             alert('退奖失败')\r\n//         }\r\n//     }\r\n//     oc = () =>{\r\n//         console.log(\"click\")\r\n//     }\r\n//     constructor() {\r\n//         super()\r\n//         this.state = {\r\n//             disabled:true,\r\n//             manager: '',\r\n//             round: '',\r\n//             winner: '',\r\n//             playerCounts: 0,\r\n//             balance: 0,\r\n//             players: [],\r\n//             currentAccount: '',\r\n//             isClicked: false,\r\n//             isShowButton: '',\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n\r\n//     }\r\n\r\n//     async componentWillMount() {\r\n        \r\n//         // //获取当前的所有地址\r\n//         let accounts = await web3.eth.getAccounts()\r\n//         if(accounts.length!=0){\r\n//             console.log(accounts.length)\r\n//             this.state.disabled=false;\r\n//         }\r\n\r\n//         // let manager = await lotteryInstance.methods.manager().call()\r\n//         // console.log(12)\r\n//         // let winner = await lotteryInstance.methods.winner().call()\r\n//         // let round = await lotteryInstance.methods.round().call()\r\n//         // let playerCounts = await lotteryInstance.methods.getPlayersCount().call()\r\n//         // //单位是wei，需要转换为eth单位\r\n//         // let balanceWei = await lotteryInstance.methods.getBalance().call()\r\n//         // //从wei单位转换为eth\r\n//         // let balance = web3.utils.fromWei(balanceWei, 'ether')\r\n//         // let players = await lotteryInstance.methods.getPlayers().call()\r\n//         // //是否显示管理员按钮\r\n//         // let isShowButton = accounts[0] === manager ? 'inline' : 'none'\r\n//         // console.log(playerCounts)\r\n//         // this.setState({\r\n//         //     // manager: manager,\r\n//         //     manager,\r\n//         //     round,\r\n//         //     winner,\r\n//         //     playerCounts,\r\n//         //     balance,\r\n//         //     players,\r\n//         //     currentAccount: accounts[0],\r\n//         //     isClicked: false,\r\n//         //     isShowButton\r\n//         // })\r\n//         this.setState({\r\n            \r\n//         })\r\n//         // console.log(aasa);\r\n//     }\r\n\r\n//     helpFunction = () => {\r\n//         let manager = this.state.manager.toLowerCase()\r\n//         window.ethereum.on('accountsChanged', (accounts) => {\r\n//             if (accounts[0]) {\r\n//                 let isShowButton = accounts[0].toLowerCase() === manager ? 'inline' : 'none'\r\n//                 this.setState({ currentAccount: accounts[0], isShowButton: isShowButton })\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         // this.helpFunction()\r\n//         return (\r\n            \r\n//             <div className=\"login2\">\r\n//                 <div className=\"login-content-wrap\"><br/><br/><h1 style={{textAlign:\"center\"}} >Welcome to FastCharacter</h1></div>\r\n//                     <div style={{textAlign:\"center\"}}>\r\n//                     <Button disabled={this.state.disabled} className=\"login-form-button\" type=\"primary\" onClick={this.oc} size=\"large\" ghost shape=\"round\"  style={{marginTop:window.innerHeight*0.3}}>\r\n//                     <Link to={{pathname:\"/List\"}}>Get start Now!</Link>\r\n//                     </Button>\r\n//                     </div>\r\n                \r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default App;"]},"metadata":{},"sourceType":"module"}