import { IGraph, IGroup, Graph } from '@antv/g6';
import { CardNodeConfig, MiniMapConfig, CardModelConfig } from './types';
export declare const getGraphSize: (width: number | undefined, height: number | undefined, container: React.RefObject<HTMLDivElement>) => number[];
export declare const bindDefaultEvents: (graph: IGraph, collapseExpand?: boolean | undefined) => void;
export declare const getDefaultEdgeArrowCfg: (d?: number, arrowType?: string, fill?: string) => {
    endArrow: {
        path: any;
        fill: string;
        d: number;
    };
};
export declare const getContentAndStyle: (cfg: CardNodeConfig) => {
    text: string | number;
    style?: undefined;
} | {
    text: string | number;
    style: Partial<{
        rotate: number;
        textAlign: "center" | "end" | "start" | "left" | "right";
        angle: number;
        x: number;
        y: number;
        text: string;
        stroke: string | null;
        opacity: number;
        fontSize: number;
        fontStyle: "normal" | "italic" | "oblique";
        fontWeight?: number | "normal" | "bold" | "bolder" | "lighter" | undefined;
        fill: string | null;
        rotateCenter: string;
        lineWidth: number;
        shadowColor: string;
        shadowBlur: number;
        shadowOffsetX?: number | undefined;
        shadowOffsetY?: number | undefined;
        position: string;
        textBaseline: "bottom" | "top" | "middle" | "alphabetic" | "hanging" | "ideographic";
        offset: number;
        background?: {
            fill?: string | undefined;
            stroke?: string | undefined;
            lineWidth?: number | undefined;
            radius?: number | number[] | undefined;
            padding?: number | number[] | undefined;
        } | undefined;
    }> | undefined;
};
export declare const getConfig: (source: unknown, item: IGroup | undefined, cfg?: CardModelConfig | undefined) => any;
export declare const getGraphId: (graph: {
    current?: string;
}) => string;
export declare const renderGraph: (graph: IGraph, data: any, autoFit: boolean) => void;
export declare const processMinimap: (cfg: MiniMapConfig | undefined, graph: Graph) => import("_@antv_g6-plugin@0.3.3@@antv/g6-plugin").Minimap | null | undefined;
/**
 * min ma
 */
export declare const getMarkerPosition: (direction: string | undefined, size: number[]) => {
    x: number;
    y: number;
};
